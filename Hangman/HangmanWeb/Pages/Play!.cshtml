@page
@model HangmanWeb.Pages.Play_Model
@{
}

<div class="container ">
    <div class="row">
        <label class="alert alert-dismissible alert-warning fs-lg-3 text-center ps-5 pe-5" id="msg">

        </label>
    </div>
    <div class="row mb-4">
        <img id="image" src="" class="img-fluid col-4" style="max-width:600px" alt="" />
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
        <div class="noselect bg-primary col-1 mt-5 ms-1 square letterbox text-primary text-center fs-1 pt-4 text-uppercase"> </div>
    </div>
    <div class="row justify-content-center">
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>q</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>w</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>e</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>r</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>t</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>y</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>u</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>i</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>o</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>p</button>
    </div>
    <div class="row row justify-content-center">
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>a</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>s</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>d</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>f</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>g</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>h</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>j</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>k</button>
        <button class="noselect letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>l</button>
    </div>
    <div class="row row justify-content-center">
        <button  id="pickAWord" class="col-2 m-1 btn btn-warning">Pick a Word</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>z</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>x</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>c</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>v</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>b</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>n</button>
        <button class="letterbutton col-1 m-1 btn btn-primary btn btn-square" disabled>m</button>
        <button id="iGiveUp" class="col-2 m-1 btn btn-warning" disabled>I Give Up</button>

    </div>
</div>

<script type="module">

    const notStarted = "Click Pick a Word to start the game!";
    const justStarted = "Take a guess!";
    const guessed = "Woohoo! You got it! Keep going!";
    const missed = "Oh, no! Try another one.";
    const lost = "Mr. Hangman is dead.";
    const won = '"You saved my life!"';
    const gaveUp = "You'll get it next time. Click Pick a Word for a new challenge."
    let gameStatus = notStarted;

    const msg = document.querySelector("#msg");
    const letterboxes = [...document.querySelectorAll(".letterbox")];
    const letterbuttons = [...document.querySelectorAll(".letterbutton")];
    const iGiveUpButton = document.querySelector("#iGiveUp");
    const pickAWordButton = document.querySelector("#pickAWord");

    let pictureNumber = 0;

    let word;
    let letter1;
    let letter2;
    let letter3;
    let letter4;
    let letter5;
    let letter6;
    let letter7;

    const options = {
        method: 'GET',
        headers: {
            'x-rapidapi-key': '65e7f85401mshad1a54cb18a19aep1d6b59jsn8e2a3e1e43ff',
            'x-rapidapi-host': 'word-generator2.p.rapidapi.com'
        }
    };
    async function getWords(count, length) {
        let wordlist;
        try {

            let url = 'https://word-generator2.p.rapidapi.com/?';
            let params = new URLSearchParams();
            params.append("count", count);
            params.append("length", length);
            let response = await fetch(url + params.toString(), options);
            let result = await response.json();
            wordlist = result.body;
        } catch (error) {
            console.log(error.message);
        }
        return wordlist;
    }

    let f = await getWords(50, 7);


   
    pickAWordButton.addEventListener("click", startGame);
    iGiveUpButton.addEventListener("click", iGiveUp);
    letterbuttons.forEach(b => b.addEventListener("click", guessALetter));

    displayMessage();
    changePicture();


    async function startGame(){
        pictureNumber = 0;
        changePicture();
        letterboxes.forEach(b => b.classList.remove("text-warning"));
        letterboxes.forEach(b => b.classList.remove("text-black"));
        gameStatus = justStarted;
        displayMessage();

        let random = (Math.floor(Math.random() * 50));
        word = f[random];
       
         letter1 = word.substring(0, 1);
         letter2 = word.substring(1, 2);
         letter3 = word.substring(2, 3);
         letter4 = word.substring(3, 4);
         letter5 = word.substring(4, 5);
         letter6 = word.substring(5, 6);
         letter7 = word.substring(6, 7);

         let wordletters = [letter1, letter2, letter3, letter4, letter5, letter6, letter7];
         
         letterboxes[0].textContent = letter1;
         letterboxes[1].textContent = letter2;
         letterboxes[2].textContent = letter3;
         letterboxes[3].textContent = letter4;
         letterboxes[4].textContent = letter5;
         letterboxes[5].textContent = letter6;
         letterboxes[6].textContent = letter7;

        letterbuttons.forEach(s => s.removeAttribute("disabled"));
        iGiveUpButton.removeAttribute("disabled");
        pickAWordButton.setAttribute("disabled", true);
    }

    function guessALetter(event){
        let triedletter = event.target;
        triedletter.setAttribute("disabled", true);
        let guessedLetterList = [...letterboxes.filter(s => s.textContent == triedletter.textContent)];
        guessedLetterList.forEach(b => b.classList.add("text-black"));
        if (guessedLetterList.length > 0){
            gameStatus = guessed;
        }
        else{
            gameStatus = missed;
            changePicture();
        }
        detectWinnerLoser();
        displayMessage();
        
    }

    function detectWinnerLoser(){
        let guessedLettersList = [...letterboxes.filter(b => b.matches(".text-black"))];
        if(guessedLettersList.length > 6){
            gameStatus = won;
        }
        if(pictureNumber == 8){
            gameStatus = lost;
            let unguessedLetterList = [...letterboxes.filter(b => b.classList.contains("text-primary"))];
            unguessedLetterList.forEach(b => b.classList.add("text-warning"));
        }
        if(gameStatus == won || gameStatus == lost){
            letterbuttons.forEach(s => s.setAttribute("disabled", true));
            iGiveUpButton.setAttribute("disabled", true);
            pickAWordButton.removeAttribute("disabled");
        }
    }

    function iGiveUp(){
        letterboxes.forEach(b => b.classList.add("text-black"));
        detectWinnerLoser();
        gameStatus = gaveUp;
        displayMessage();
    }

    function changePicture(){
       const image = document.querySelector("#image");
       image.setAttribute("src", `/images/h${pictureNumber}mistake.gif`);
       pictureNumber++;
    }

    function displayMessage(){
        msg.textContent = gameStatus;
    }
</script>